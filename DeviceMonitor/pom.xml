<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.codingcat</groupId>
    <artifactId>DeviceMonitor</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>DeviceMonitor</name>
    <description>FuguIOT 物联网平台</description>

    <parent>
       <groupId>org.springframework.boot</groupId>
       <artifactId>spring-boot-starter-parent</artifactId>
       <version>2.1.7.RELEASE</version>
       <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
       <maven.compiler.source>${java.version}</maven.compiler.source>
       <maven.compiler.target>${java.version}</maven.compiler.target>
       <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
       <maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
       <maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>

       <springfox.version>2.6.1</springfox.version>
       <ant.version>1.9.4</ant.version>

       <!--本地包的引入-->
       <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
       <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
       <java.version>1.8</java.version>
       <docker.image.prefix>docker-demo</docker.image.prefix>

       <commons-lang3.version>3.6</commons-lang3.version>
       <commons-codec.version>1.11</commons-codec.version>
       <hutool-all.version>4.6.2</hutool-all.version>
       <oshi.version>3.13.0</oshi.version>
       <fastdfs-client-java.version>0.0.1-SNAPSHOT</fastdfs-client-java.version>
       <shiro-spring.version>1.4.0</shiro-spring.version>
       <shiro-redis.version>3.1.0</shiro-redis.version>
       <mybatis-plus-boot-starter.version>2.2.0</mybatis-plus-boot-starter.version>
       <pagehelper.spring.boot.version>1.2.5</pagehelper.spring.boot.version>
    </properties>

    <dependencies>
       <!-- spring boot framework -->
       <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-web</artifactId>
       </dependency>
       <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-test</artifactId>
          <scope>test</scope>
       </dependency>

       <!-- netty -->
       <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty-all</artifactId>
          <version>4.1.25.Final</version>
       </dependency>

       <!-- lombok插件 -->
       <dependency>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok</artifactId>
          <optional>true</optional>
       </dependency>

       <!-- ========================= 数据库相关 ========================== -->
<!--       <dependency>-->
<!--          <groupId>mysql</groupId>-->
<!--          <artifactId>mysql-connector-java</artifactId>-->
<!--          <version>${mysql.version}</version>-->
<!--       </dependency>-->

<!--       &lt;!&ndash; 阿里数据库连接池 &ndash;&gt;-->
<!--       <dependency>-->
<!--          <groupId>com.alibaba</groupId>-->
<!--          <artifactId>druid</artifactId>-->
<!--          <version>1.1.20</version>-->
<!--       </dependency>-->

       <!-- ========================= 权限相关 ========================== -->
       <!-- AOP依赖,一定要加,否则权限拦截验证不生效 【注：系统日记也需要此依赖】 -->
       <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-aop</artifactId>
       </dependency>
       <!-- Redis -->
       <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-data-redis-reactive</artifactId>
       </dependency>


       <!-- 三方包 -->
       <dependency>
          <groupId>org.apache.ant</groupId>
          <artifactId>ant</artifactId>
          <version>${ant.version}</version>
       </dependency>

       <!-- swagger-->
       <dependency>
          <groupId>io.springfox</groupId>
          <artifactId>springfox-swagger2</artifactId>
          <version>${springfox.version}</version>
          <exclusions>
              <exclusion>
                 <groupId>org.mapstruct</groupId>
                 <artifactId>mapstruct</artifactId>
              </exclusion>
          </exclusions>
       </dependency>
       <dependency>
          <groupId>io.springfox</groupId>
          <artifactId>springfox-swagger-ui</artifactId>
          <version>${springfox.version}</version>
       </dependency>
       <dependency>
          <groupId>io.springfox</groupId>
          <artifactId>springfox-bean-validators</artifactId>
          <version>${springfox.version}</version>
       </dependency>
    </dependencies>

    <build>
       <resources>
          <resource>
              <directory>src/main/java</directory>
              <includes>
                 <include>**/*.xml</include>
              </includes>
              <filtering>false</filtering>
          </resource>
          <resource>
              <directory>src/main/resources</directory>
          </resource>
       </resources>
       <testResources>
          <testResource>
              <directory>src/main/java</directory>
              <includes>
                 <include>**/*.xml</include>
              </includes>
              <filtering>false</filtering>
          </testResource>
       </testResources>
       <plugins>
          <!-- maven打包插件 -> 将整个工程打成一个 fatjar -->
          <plugin>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-maven-plugin</artifactId>
              <!-- 作用:项目打成jar，同时把本地jar包也引入进去 -->
              <configuration>
                 <includeSystemScope>true</includeSystemScope>
              </configuration>
          </plugin>
          <!-- 通过docker构建部署到服务器 -->
          <plugin>
              <groupId>com.spotify</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <version>1.0.0</version>
              <configuration>
                 <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                 <!-- 生成的docker镜像名称  -->
                 <imageName>${project.artifactId}</imageName>
                 <!--指定标签-->
                 <imageTags>
                    <imageTag>1.0</imageTag>
                 </imageTags>
                 <!--指定远程 docker api地址-->
                 <dockerHost>https://101.200.141.147:2375</dockerHost>
                 <resources>
                    <resource>
                        <targetPath>/</targetPath>
                        <directory>${project.build.directory}</directory>
                        <include>${project.build.finalName}.jar</include>
                    </resource>
                 </resources>
              </configuration>
          </plugin>
          <!-- 复制jar包到指定目录 -->
          <plugin>
              <artifactId>maven-antrun-plugin</artifactId>
              <executions>
                 <execution>
                    <phase>package</phase>
                    <configuration>
                        <tasks>
                           <copy todir="src/main/docker" file="target/${project.artifactId}-${project.version}.${project.packaging}"></copy>
                        </tasks>
                    </configuration>
                    <goals>
                        <goal>run</goal>
                    </goals>
                 </execution>
              </executions>
          </plugin>
       </plugins>
    </build>
</project>
